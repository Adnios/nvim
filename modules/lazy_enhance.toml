[[plugins]]
repo = 'itchyny/vim-cursorword'
on_event = ['BufReadPre', 'BufNewFile']
hook_source = '''
  augroup user_plugin_cursorword
    autocmd!
    autocmd FileType defx,denite,fern,clap,vista let b:cursorword = 0
    autocmd WinEnter * if &diff || &pvw | let b:cursorword = 0 | endif
    autocmd InsertEnter * let b:cursorword = 0
    autocmd InsertLeave * let b:cursorword = 1
  augroup END
'''

[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = 'BufReadPre'
hook_source = '''
lua <<EOF
require("indent_blankline").setup {
  enabled = true,
  -- char = "|",
  char = "│",
  -- char_list = {"", "┊", "┆", "¦", "|", "¦", "┆", "┊", ""},
  filetype_exclude = {"help", "startify", "dashboard", "packer", "guihua", "NvimTree", "sidekick"},
  show_trailing_blankline_indent = false,
  show_first_indent_level = true,
  buftype_exclude = {"terminal"},
  space_char_blankline = " ",
  use_treesitter = true,
  show_current_context = false,
  context_patterns = {
    "class", "return", "function", "method", "^if", "if", "^while", "jsx_element", "^for", "for",
    "^object", "^table", "block", "arguments", "if_statement", "else_clause", "jsx_element",
    "jsx_self_closing_element", "try_statement", "catch_clause", "import_statement",
    "operation_type"
  }
  -- bufname_exclude = {"README.md"}
}
EOF
'''

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap j <Plug>(accelerated_jk_gj)
  nmap k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'kyazdani42/nvim-tree.lua'
on_cmd = ['NvimTreeToggle', 'NvimTreeOpen', 'NvimTreeFindFile']
# on_event = 'VimEnter'
hook_source = '''
lua require ('plugins.nvim-tree')
'''

[[plugins]]
repo = 'nvim-telescope/telescope-fzy-native.nvim'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'nvim-lua/popup.nvim'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = 'telescope.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
on_lua = 'telescope'
hook_add = '''
lua <<EOF
vim.api.nvim_set_keymap('n', '<Leader>ff', '<cmd>Telescope find_files find_command=rg,--hidden,--files<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>.', '<cmd>Telescope find_files find_command=rg,--hidden,--files<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fb', '<cmd>Telescope file_browser<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>bb', '<cmd>Telescope buffers<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>,', '<cmd>Telescope buffers<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fa', '<cmd>Telescope live_grep<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fw', '<cmd>Telescope grep_string<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fh', '<cmd>DashboardFindHistory<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fr', '<cmd>Telescope resume<CR>', {noremap = true, silent = true})
vim.api.nvim_set_keymap('n', '<Leader>fp', '<cmd>Telescope pickers<CR>', {noremap = true, silent = true})
EOF
'''
hook_source = '''
lua <<EOF
require('plugins.telescope')
EOF
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = 'BufReadPre'
depends = 'plenary.nvim'
hook_source = '''
lua <<EOF
require ('plugins.gitsigns')
EOF
'''

[[plugins]]
repo = 'sindrets/diffview.nvim'
on_cmd = ['DiffviewOpen', 'DiffviewFileHistory']

[[plugins]]
repo = 'TimUntersberger/neogit'
on_cmd = 'Neogit'
depends = ['plenary.nvim', 'diffview.nvim']
hook_source = '''
lua require ('plugins.neogit')
'''

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap gI <Plug>(niceblock-gI)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'liuchengxu/vista.vim'
on_cmd = 'Vista'
hook_source = '''
  let g:vista#renderer#enable_icon = 1
  let g:vista_disable_statusline = 1
  let g:vista_default_executive = 'coc'
  " let g:vista_default_executive = 'ctags'
  let g:vista_echo_cursor_strategy = 'floating_win'
  let g:vista_vimwiki_executive = 'markdown'
  let g:vista_executive_for = {
    \ 'markdown': 'toc',
    \ 'tex': 'coc',
    \ 'python': 'coc',
    \ 'vim': 'coc',
    \ 'cpp': 'coc',
    \ 'cu': 'coc',
    \ 'cc': 'coc',
    \ }
  let g:vista#renderer#icons = {
              \   "function": "\uf794",
              \   "variable": "\u0ec2",
              \   "label": "笠", 
              \   "subsection": "", 
              \   "section": "", 
              \   "paragraph": "", 
              \   "subsubsection": "",
              \  }
'''

[[plugins]]
repo = 'akinsho/nvim-toggleterm.lua'
on_cmd = ['ToggleTerm', 'TermExec']
hook_source = '''
lua require ('plugins.toogleterm')
'''
